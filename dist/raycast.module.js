function t(t,n){(null==n||n>t.length)&&(n=t.length);for(var r=0,e=new Array(n);r<n;r++)e[r]=t[r];return e}var n=a("colinear"),r=a("parallel"),e=a("none");function a(t){return{type:t}}var i=/*#__PURE__*/function(){function i(t){this.uniquePoints=[],this.uniqueAngles=[],this.setSegments(t)}var o=i.prototype;return o.setSegments=function(i){var o=i.reduce(function(t,n){for(var r=function(){var r=a[e];t.some(function(t){return t.x===r.x&&t.y===r.y})||t.push(n.a,n.b)},e=0,a=Object.values(n);e<a.length;e++)r();return t},[]),u=i.reduce(function(o,u){for(var s,c=function(){var t=s.value,i=function(t,i,o,u,s,c,y,l){var f=(l-c)*(o-t)-(y-s)*(u-i),h=(y-s)*(i-c)-(l-c)*(t-s),v=(o-t)*(i-c)-(u-i)*(t-s);if(0==f)return 0==h&&0==v?n:r;var p,x,g=h/f,b=v/f;return g>=0&&g<=1&&b>=0&&b<=1?(p={x:t+g*(o-t),y:i+g*(u-i)},(x=a("intersecting")).point=p,x):e}(u.a.x,u.a.y,u.b.x,u.b.y,t.a.x,t.a.y,t.b.x,t.b.y);"intersecting"!==i.type||o.some(function(t){return t.x===i.point.x&&t.y!==i.point.y})||o.push({x:i.point.x,y:i.point.y})},y=function(n,r){var e="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(e)return(e=e.call(n)).next.bind(e);if(Array.isArray(n)||(e=function(n,r){if(n){if("string"==typeof n)return t(n,r);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?t(n,r):void 0}}(n))){e&&(n=e);var a=0;return function(){return a>=n.length?{done:!0}:{done:!1,value:n[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(i);!(s=y()).done;)c();return o},[]);this.uniquePoints=[].concat(u,o),this.segments=i},o.createRay=function(t,n,r){return{a:{x:t,y:n},b:{x:t+Math.cos(r),y:n+Math.sin(r)}}},o.getIntersection=function(t,n){var r=t.a.x,e=t.a.y,a=t.b.x-t.a.x,i=t.b.y-t.a.y,o=n.a.y,u=n.b.x-n.a.x,s=n.b.y-n.a.y;if(a*s==i*u)return null;var c=(a*(o-e)+i*(r-n.a.x))/(u*i-s*a),y=(o+s*c-e)/i;return y<0||c<0||c>1?null:{x:r+a*y,y:e+i*y,param:y}},o.emit=function(t,n){for(var r=[],e=0;e<this.uniquePoints.length;e++){var a=this.uniquePoints[e],i=Math.atan2(a.y-n,a.x-t);r.push(i-1e-4,i,i+1e-4)}for(var o=[],u=0;u<r.length;u++){for(var s=r[u],c=this.createRay(t,n,s),y=null,l=0;l<this.segments.length;l++){var f=this.getIntersection(c,this.segments[l]);f&&(!y||f.param<y.param)&&(y=f)}y&&(y.angle=s,o.push(y))}return o.sort(function(t,n){return t.angle-n.angle})},i}();function o(t){return new i(t)}function u(t,n,r,e){return{a:{x:t,y:n},b:{x:r,y:e}}}export{o as createRaycaster,u as createSegment};
//# sourceMappingURL=raycast.module.js.map
