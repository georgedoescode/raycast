function t(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}var n=a("colinear"),e=a("parallel"),r=a("none");function a(t){return{type:t}}var o=/*#__PURE__*/function(){function o(t){this.uniquePoints=[],this.uniqueAngles=[],this.setSegments(t)}var i=o.prototype;return i.setSegments=function(o){var i=o.reduce(function(t,n){for(var e=function(){var e=a[r];t.some(function(t){return t.x===e.x&&t.y===e.y})||t.push(n.a,n.b)},r=0,a=Object.values(n);r<a.length;r++)e();return t},[]),u=o.reduce(function(i,u){for(var s,c=function(){var t=s.value,o=function(t,o,i,u,s,c,y,l){var f=(l-c)*(i-t)-(y-s)*(u-o),h=(y-s)*(o-c)-(l-c)*(t-s),p=(i-t)*(o-c)-(u-o)*(t-s);if(0==f)return 0==h&&0==p?n:e;var v,x,g=h/f,b=p/f;return g>=0&&g<=1&&b>=0&&b<=1?(v={x:t+g*(i-t),y:o+g*(u-o)},(x=a("intersecting")).point=v,x):r}(u.a.x,u.a.y,u.b.x,u.b.y,t.a.x,t.a.y,t.b.x,t.b.y);"intersecting"!==o.type||i.some(function(t){return t.x===o.point.x&&t.y!==o.point.y})||i.push({x:o.point.x,y:o.point.y})},y=function(n,e){var r="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(r)return(r=r.call(n)).next.bind(r);if(Array.isArray(n)||(r=function(n,e){if(n){if("string"==typeof n)return t(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(n,e):void 0}}(n))){r&&(n=r);var a=0;return function(){return a>=n.length?{done:!0}:{done:!1,value:n[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(o);!(s=y()).done;)c();return i},[]);this.uniquePoints=[].concat(u,i),this.segments=o},i.createRay=function(t,n,e){return{a:{x:t,y:n},b:{x:t+Math.cos(e),y:n+Math.sin(e)}}},i.getIntersection=function(t,n){var e=t.a.x,r=t.a.y,a=t.b.x-t.a.x,o=t.b.y-t.a.y,i=n.a.y,u=n.b.x-n.a.x,s=n.b.y-n.a.y;if(a*s==o*u)return null;var c=(a*(i-r)+o*(e-n.a.x))/(u*o-s*a),y=(i+s*c-r)/o;return y<0||c<0||c>1?null:{x:e+a*y,y:r+o*y,param:y}},i.emit=function(t,n){for(var e=[],r=0;r<this.uniquePoints.length;r++){var a=this.uniquePoints[r],o=Math.atan2(a.y-n,a.x-t);e.push(o-1e-4,o,o+1e-4)}for(var i=[],u=0;u<e.length;u++){for(var s=e[u],c=this.createRay(t,n,s),y=null,l=0;l<this.segments.length;l++){var f=this.getIntersection(c,this.segments[l]);f&&(!y||f.param<y.param)&&(y=f)}y&&(y.angle=s,i.push(y))}return i.sort(function(t,n){return t.angle-n.angle})},o}();exports.createRaycaster=function(t){return new o(t)},exports.createSegment=function(t,n,e,r){return{a:{x:t,y:n},b:{x:e,y:r}}};
//# sourceMappingURL=raycast.cjs.map
